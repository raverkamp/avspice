2021-01-02_20:05
Ich will elektrische Netzwerke analysieren.


erstmal pipenv

pipenv check

und es ist da.
x3
pipenv install sympy

pipenv shell


2021-01-03_13:45

Resistor Netzwerke analysieren funktioniert.

2021-01-04_10:37
Symbolisch funktioniert es auch.


2021-01-04_13:03
Ich benutze jetzt pylint. 

2021-01-17_10:23
jetzt finktioneiren auch NPN Transistoren.
Problem: Konvergenz.

2021-01-24_12:51

20 iterationen reichte nicht, aber 30

2021-01-24_13:15
Man kann jetzt eine Lösung als start angeben.

Damit ist es möglich sich an Lösungen heran zu tasten.

Also zum Beispiel langsam die Spannung steigern.

Die initiale Lösung zu finden ist am schwierigsten.

* 2021-02-07_17:18

Probleme mit Blinklicht.

Kopnvergenz Probleme für zwei Transistoren?

2021-02-27_10:15

Konvergenz Problme gelöst, langsames hochfahren von Voltage Source und Current Sourcen 

2021-02-27_10:17
Blinklicht.
Iterativ über die Zeit simulieren, und dann kommt man am eine Stelle an der
die Lösungsuche nicht mehr funktioniert.
Lösungsuche ist eigentlich Multivariate Newton Methode.
Wir haben auch die Lösung des vorherigen Schrittes als Startwert.
Aber die Lösungssuche sprint einfach nur noch hin und her.

Wenn man bei der Lösungssuche nicht abbricht, sondern einfach den aktuellen Kandifaten zurückgibt,
dann bekommt man ein periodisches Verhalten. Mit starken Sprüngen.

Ich habe das Blinklicht auch mit LT Spice auf Windows simuliert,
Da bekommt man auch ein periodische Verhalten, auch mit Sprüngen.


Vieleicht habe ich eine Lösungs Mannigfaltigkeit.



2021-02-27_12:56
Wenn man mit 0 startet un die Energie faktor langsam erhöht bekommt man für
die problematischen capa_voltages eine Lösung. Die sieht aber anders als das
wo andere Lösungssuche rumsucht.

2021-02-27_13:06
Weitere versuch verbinde Basen der Transistoren mit Kondensator gegen Ground.
OverflowError: math range error

2021-03-12_23:55

Lösungssuche konvergiert nicht weil die Ableitunsgmatrix Singulär wird.



2021-03-13_23:53
Problem ist Schrittweite ich bekomme shr grosse Ströme ins System.
Und wieso sind da negative Potentiale?


2021-05-22_14:30
Nochmal am Solver gedreht
Ich habe eine Transistor Schaltung, wenn hier die Lösung mittles Newton Rapson verfahren gesucht wird,
dann ist der Start bei 0 totaler Mist.

Wahrscheinlich ist das Differential fast Singular.

Momentan besteht die Möglichkeit den Energy Level schrittweise zu erhöhen, also die Spannungsquellen
langsam hochzufahren.

Alternativ kann man jeden Konten ueber einen Widerstand mit Ground zu verbinden. Und diese Wderstände langsam immer grösser machen.
Diese Lösungen wuerden physikalisch Sinn machen.

Oder statt f(x)= 0 löst man zuerst f(x)+ a(x - f(0)) = 0

Fuer a=1 ist 0 eine Lösung!


2021-05-22_14:55
Funktioniert nicht. Start bei 0 ist immer noch mist.


2021-05-23_10:49
Auch start bei 1 oder zufällig ist Mist.

Zufällig kann funktionieren.
Es gib anscheinend viele Stellen wo man versacken kann.
Also scheint der Algorithmus prinizipiell zu funktionieren.

Und ich löse f(x) + a ((x-x0) -f(x0))
Das hat Nullstelle x0 bei a = 1, damit anfangen.
Aber es läuft immer mal wieder in Löcher rein.

Es funktioniert genauso gut wenn a=0 und man mit einem zufälligen Startwert anfängt.

Wenn eine Lösung in sicht ist, scheint die Konvergenz auch quadratisch zu sein wie es beim
Newton Verfahren zu erwarten ist.

Wie finde ich vernünftige Startwerte:

Geerdete Voltage Source: Klar + Knoten bekommt Voltage zugeordnet.

Oder einfach alles erstmal über Widerstände erden?


Ich habe gerade einen Text zu LTSpice gefunden. Um den Operating Point zu bestimmen werden die Voltages langsam
hochgefahren. dann war meine Idee doch nicht so dumm.
2021-05-23_15:49
jetzt arbiete ich nur mit Energy Levels  und für die einfache Transistor Schaltung
wird keine Lösung gefunden.

2021-09-02_12:09
Erster Versuch mit scipy optimize ist auch nicht besser.

2021-11-04_22:08

Wenn Voltage am Kpndensator bei -0,4 ist dann konvergiert nichts mehr.
Auch wenn ich von verschiedenen Seiten komme.

2021-12-28_15:18
Was neues:
Zeitabhängigie Voltage Source

Das könnte man mit Variablen behandeln.


2022-01-06_21:53
Fuer eine zeitabhängige Voltage Source brauche ich eine Transienten Analyse.

Ich muss die Interna umstellen.

Es gibt Nodes.

Und die Ports der Bauteile sind mit den Nodes verbunden.

Pro Node wird die Voltage ausgerechnet.
Pro Port die Current berechnet.

Pro Voltage Source gibt es eine Current Variable.

Capacitors
Fuer Operating Point haben sie immer Zustand.

Für Transient Analyse sind sie Teil der Differential Gleichung.

Spulen genauso.

2022-01-30_11:55
Ich werde jetzt mal mit dem echten Spice einen dieser Oscilatoren simulieren.

2022-01-30_12:27
Die Bauteile(Modelle) muss man selber irgendwo finden.


2022-01-30_14:06
Ich habe für den den Oscilator mit meinem system un ngspice den Operating Point
ausrechnen lassen. Es passt zusammen.

2022-01-30_14:47
Ich stelle fest die Oszilation die ich in der Simulation von oszi sehe
haben nichts mit dem Transistoren zu tun, es sind einfach die Schwingungen in
der C-L Kette.

2022-02-13_10:14
Das meiste ist auf Code Generierung umgstellt.

2022-02-19_11:14
Ich habe das Network Format auf das Spice Modell umgestellt.
Knoten werden explizit benannt, und Bauteile mit diesen verbunden.


2022-02-20_14:32

Ich simuliere den Blinker mit ngspice.  Die zaheln stimmen nicht völlig überein.
OP Analyse passt in etwa. Aber auch im Spice Modell habe ich nach 3.31 Sekunden
grosse Sprünge. Muss ich impplizit integrieren?


2022-02-24_21:43
Inzwischen benutze ich das implizite Euler Verfahren, es bringt nichts.
Ich habe mir die Ausgabe von Spice angeschaut.
Ich fuer v(t1b)  einen grossen  Sprung in der Simulation von ca. -6.5 Volt (von 0.5 nach -6.0).
Schrittweite 2e-10. (- 3.435580616042551e+00 3.435580616280970e+00)
Das bekomme ich nicht simuliert.
Es gibt noch andere Unstetigkeiten.

2022-05-25_21:18

Alles tests laufen lassen mit
PYTHONPATH=. python tests/all_tests.py

2022-05-25_23:32

PYTHONPATH=. python example/blink1.py sol 0 -t1b 0.1
und
PYTHONPATH=. python example/blink1.py sol 0 -t1b 0.6
liefern zwei verschiedee Lösungen.


2022-05-26_13:29
Ich habe eine stueckweise lineare Voltage Source implementiert und
mache damit ein Rampup der Versorgungsspannung fuer das
Blinklicht.
Die Simulation bricht schneller ab als ohne Rampup.


2022-05-27_15:06
Die Blinker Simulation funktioniert.
Wenn keine Lösung ausgehedn von der alten gefunden wird, startet die Lösungssuche
mit einem zufälligen Vector neu.
